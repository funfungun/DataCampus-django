# Generated by Django 4.2.4 on 2023-08-30 05:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("single_page", "0002_delete_authgroup_delete_authgrouppermissions_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=30)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "blog_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CategoryInfo",
            fields=[
                ("zipcode", models.IntegerField(primary_key=True, serialize=False)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("category_info", models.JSONField(blank=True, null=True)),
            ],
            options={
                "db_table": "category_info",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DataEngCsv2",
            fields=[
                ("zipcode", models.IntegerField(primary_key=True, serialize=False)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("avg_size", models.FloatField(blank=True, null=True)),
                ("avg_cost", models.FloatField(blank=True, null=True)),
                ("place_code", models.IntegerField(blank=True, null=True)),
                ("op_ratio", models.IntegerField(blank=True, null=True)),
                ("total_deal", models.IntegerField(blank=True, null=True)),
                ("month_fee_ratio", models.IntegerField(blank=True, null=True)),
                ("new_ratio", models.IntegerField(blank=True, null=True)),
                ("bus_stop", models.IntegerField(blank=True, null=True)),
                ("art", models.IntegerField(blank=True, null=True)),
                ("bike", models.IntegerField(blank=True, null=True)),
                ("gym", models.IntegerField(blank=True, null=True)),
                ("chatolic", models.IntegerField(blank=True, null=True)),
                ("hospital", models.IntegerField(blank=True, null=True)),
                ("perform_place", models.IntegerField(blank=True, null=True)),
                ("park", models.IntegerField(blank=True, null=True)),
                ("theater", models.IntegerField(blank=True, null=True)),
                ("subway", models.IntegerField(blank=True, null=True)),
                ("animal_hospital", models.IntegerField(blank=True, null=True)),
                ("beatuy_care", models.IntegerField(blank=True, null=True)),
                ("coin_karaoke", models.IntegerField(blank=True, null=True)),
                ("liberary", models.IntegerField(blank=True, null=True)),
                ("church", models.IntegerField(blank=True, null=True)),
                ("big_mart", models.IntegerField(blank=True, null=True)),
                ("gonggogng_gym", models.IntegerField(blank=True, null=True)),
                ("cafe", models.IntegerField(blank=True, null=True)),
                ("police_office", models.IntegerField(blank=True, null=True)),
                ("daiso", models.IntegerField(blank=True, null=True)),
                ("bar", models.IntegerField(blank=True, null=True)),
                ("shopping_center", models.IntegerField(blank=True, null=True)),
                ("super_market", models.IntegerField(blank=True, null=True)),
                ("pharmacy", models.IntegerField(blank=True, null=True)),
                ("banchan", models.IntegerField(blank=True, null=True)),
                ("convience_store", models.IntegerField(blank=True, null=True)),
                ("bank", models.IntegerField(blank=True, null=True)),
                ("coin_wash_room", models.IntegerField(blank=True, null=True)),
                ("yoga", models.IntegerField(blank=True, null=True)),
                ("cross_fit", models.IntegerField(blank=True, null=True)),
                ("atm", models.IntegerField(blank=True, db_column="ATM", null=True)),
                ("food_store", models.IntegerField(blank=True, null=True)),
                ("post_office", models.IntegerField(blank=True, null=True)),
                (
                    "pc_room",
                    models.IntegerField(blank=True, db_column="PC_room", null=True),
                ),
                ("piilates", models.IntegerField(blank=True, null=True)),
                ("citizen_center", models.IntegerField(blank=True, null=True)),
                ("temple", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "data_eng_csv_2",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DataEngCsv3",
            fields=[
                ("zipcode", models.IntegerField(primary_key=True, serialize=False)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("avg_size", models.FloatField(blank=True, null=True)),
                ("avg_cost", models.FloatField(blank=True, null=True)),
                ("place_code", models.IntegerField(blank=True, null=True)),
                ("op_ratio", models.IntegerField(blank=True, null=True)),
                ("total_deal", models.IntegerField(blank=True, null=True)),
                ("month_fee_ratio", models.FloatField(blank=True, null=True)),
                ("new_ratio", models.IntegerField(blank=True, null=True)),
                ("atm", models.IntegerField(blank=True, null=True)),
                ("pc_room", models.IntegerField(blank=True, null=True)),
                ("police_office", models.IntegerField(blank=True, null=True)),
                ("gonggogng_gym", models.IntegerField(blank=True, null=True)),
                ("perform_place", models.IntegerField(blank=True, null=True)),
                ("park", models.IntegerField(blank=True, null=True)),
                ("church", models.IntegerField(blank=True, null=True)),
                ("big_mart", models.IntegerField(blank=True, null=True)),
                ("liberary", models.IntegerField(blank=True, null=True)),
                ("animal_hospital", models.IntegerField(blank=True, null=True)),
                ("art", models.IntegerField(blank=True, null=True)),
                ("banchan", models.IntegerField(blank=True, null=True)),
                ("bus_stop", models.IntegerField(blank=True, null=True)),
                ("hospital", models.IntegerField(blank=True, null=True)),
                ("beauty_care", models.IntegerField(blank=True, null=True)),
                ("daiso", models.IntegerField(blank=True, null=True)),
                ("chatolic", models.IntegerField(blank=True, null=True)),
                ("shopping_center", models.IntegerField(blank=True, null=True)),
                ("bar", models.IntegerField(blank=True, null=True)),
                ("super_market", models.IntegerField(blank=True, null=True)),
                ("pharmacy", models.IntegerField(blank=True, null=True)),
                ("theater", models.IntegerField(blank=True, null=True)),
                ("yoga", models.IntegerField(blank=True, null=True)),
                ("post_office", models.IntegerField(blank=True, null=True)),
                ("bank", models.IntegerField(blank=True, null=True)),
                ("food_store", models.IntegerField(blank=True, null=True)),
                ("bike", models.IntegerField(blank=True, null=True)),
                ("temple", models.IntegerField(blank=True, null=True)),
                ("citizen_center", models.IntegerField(blank=True, null=True)),
                ("subway", models.IntegerField(blank=True, null=True)),
                ("cafe", models.IntegerField(blank=True, null=True)),
                ("coin_karaoke", models.IntegerField(blank=True, null=True)),
                ("coin_wash_room", models.IntegerField(blank=True, null=True)),
                ("cross_fit", models.IntegerField(blank=True, null=True)),
                ("convience_store", models.IntegerField(blank=True, null=True)),
                ("piilates", models.IntegerField(blank=True, null=True)),
                ("gym", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "data_eng_csv_3",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "django_site",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InfoCategory",
            fields=[
                ("zipcode", models.IntegerField(primary_key=True, serialize=False)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("atm", models.FloatField(blank=True, null=True)),
                ("pc_room", models.FloatField(blank=True, null=True)),
                ("police_office", models.FloatField(blank=True, null=True)),
                ("gonggogng_gym", models.FloatField(blank=True, null=True)),
                ("perform_place", models.FloatField(blank=True, null=True)),
                ("park", models.FloatField(blank=True, null=True)),
                ("church", models.FloatField(blank=True, null=True)),
                ("big_mart", models.FloatField(blank=True, null=True)),
                ("liberary", models.FloatField(blank=True, null=True)),
                ("animal_hospital", models.FloatField(blank=True, null=True)),
                ("art", models.FloatField(blank=True, null=True)),
                ("banchan", models.FloatField(blank=True, null=True)),
                ("bus_stop", models.FloatField(blank=True, null=True)),
                ("hospital", models.FloatField(blank=True, null=True)),
                ("beauty_care", models.FloatField(blank=True, null=True)),
                ("daiso", models.FloatField(blank=True, null=True)),
                ("chatolic", models.FloatField(blank=True, null=True)),
                ("shopping_center", models.FloatField(blank=True, null=True)),
                ("bar", models.FloatField(blank=True, null=True)),
                ("super_market", models.FloatField(blank=True, null=True)),
                ("pharmacy", models.FloatField(blank=True, null=True)),
                ("theater", models.FloatField(blank=True, null=True)),
                ("yoga", models.FloatField(blank=True, null=True)),
                ("post_office", models.FloatField(blank=True, null=True)),
                ("bank", models.FloatField(blank=True, null=True)),
                ("food_store", models.FloatField(blank=True, null=True)),
                ("bike", models.FloatField(blank=True, null=True)),
                ("temple", models.FloatField(blank=True, null=True)),
                ("citizen_center", models.FloatField(blank=True, null=True)),
                ("subway", models.FloatField(blank=True, null=True)),
                ("cafe", models.FloatField(blank=True, null=True)),
                ("coin_karaoke", models.FloatField(blank=True, null=True)),
                ("coin_wash_room", models.FloatField(blank=True, null=True)),
                ("cross_fit", models.FloatField(blank=True, null=True)),
                ("convience_store", models.FloatField(blank=True, null=True)),
                ("piilates", models.FloatField(blank=True, null=True)),
                ("gym", models.FloatField(blank=True, null=True)),
                ("atm_info", models.TextField(blank=True, null=True)),
                ("pc_room_info", models.TextField(blank=True, null=True)),
                ("police_office_info", models.TextField(blank=True, null=True)),
                ("gonggogng_gym_info", models.TextField(blank=True, null=True)),
                ("perform_place_info", models.TextField(blank=True, null=True)),
                ("park_info", models.TextField(blank=True, null=True)),
                ("church_info", models.TextField(blank=True, null=True)),
                ("big_mart_info", models.TextField(blank=True, null=True)),
                ("liberary_info", models.TextField(blank=True, null=True)),
                ("animal_hospital_info", models.TextField(blank=True, null=True)),
                ("art_info", models.JSONField(blank=True, null=True)),
                ("banchan_info", models.TextField(blank=True, null=True)),
                ("bus_stop_info", models.TextField(blank=True, null=True)),
                ("hospital_info", models.TextField(blank=True, null=True)),
                ("beauty_care_info", models.TextField(blank=True, null=True)),
                ("daiso_info", models.TextField(blank=True, null=True)),
                ("chatolic_info", models.TextField(blank=True, null=True)),
                ("shopping_center_info", models.TextField(blank=True, null=True)),
                ("bar_info", models.TextField(blank=True, null=True)),
                ("super_market_info", models.TextField(blank=True, null=True)),
                ("pharmacy_info", models.TextField(blank=True, null=True)),
                ("theater_info", models.TextField(blank=True, null=True)),
                ("yoga_info", models.TextField(blank=True, null=True)),
                ("post_office_info", models.TextField(blank=True, null=True)),
                ("bank_info", models.TextField(blank=True, null=True)),
                ("food_store_info", models.TextField(blank=True, null=True)),
                ("bike_info", models.TextField(blank=True, null=True)),
                ("temple_info", models.TextField(blank=True, null=True)),
                ("citizen_center_info", models.TextField(blank=True, null=True)),
                ("subway_info", models.TextField(blank=True, null=True)),
                ("cafe_info", models.TextField(blank=True, null=True)),
                ("coin_karaoke_info", models.TextField(blank=True, null=True)),
                ("coin_wash_room_info", models.TextField(blank=True, null=True)),
                ("cross_fit_info", models.TextField(blank=True, null=True)),
                ("convience_store_info", models.TextField(blank=True, null=True)),
                ("piilates_info", models.TextField(blank=True, null=True)),
                ("gym_info", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "info_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlzCategory",
            fields=[
                ("zipcode", models.IntegerField(primary_key=True, serialize=False)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("atm", models.FloatField(blank=True, null=True)),
                ("pc_room", models.FloatField(blank=True, null=True)),
                ("police_office", models.FloatField(blank=True, null=True)),
                ("gonggogng_gym", models.FloatField(blank=True, null=True)),
                ("perform_place", models.FloatField(blank=True, null=True)),
                ("park", models.FloatField(blank=True, null=True)),
                ("church", models.FloatField(blank=True, null=True)),
                ("big_mart", models.FloatField(blank=True, null=True)),
                ("liberary", models.FloatField(blank=True, null=True)),
                ("animal_hospital", models.FloatField(blank=True, null=True)),
                ("art", models.FloatField(blank=True, null=True)),
                ("banchan", models.FloatField(blank=True, null=True)),
                ("bus_stop", models.FloatField(blank=True, null=True)),
                ("hospital", models.FloatField(blank=True, null=True)),
                ("beauty_care", models.FloatField(blank=True, null=True)),
                ("daiso", models.FloatField(blank=True, null=True)),
                ("chatolic", models.FloatField(blank=True, null=True)),
                ("shopping_center", models.FloatField(blank=True, null=True)),
                ("bar", models.FloatField(blank=True, null=True)),
                ("super_market", models.FloatField(blank=True, null=True)),
                ("pharmacy", models.FloatField(blank=True, null=True)),
                ("theater", models.FloatField(blank=True, null=True)),
                ("yoga", models.FloatField(blank=True, null=True)),
                ("post_office", models.FloatField(blank=True, null=True)),
                ("bank", models.FloatField(blank=True, null=True)),
                ("food_store", models.FloatField(blank=True, null=True)),
                ("bike", models.FloatField(blank=True, null=True)),
                ("temple", models.FloatField(blank=True, null=True)),
                ("citizen_center", models.FloatField(blank=True, null=True)),
                ("subway", models.FloatField(blank=True, null=True)),
                ("cafe", models.FloatField(blank=True, null=True)),
                ("coin_karaoke", models.FloatField(blank=True, null=True)),
                ("coin_wash_room", models.FloatField(blank=True, null=True)),
                ("cross_fit", models.FloatField(blank=True, null=True)),
                ("convience_store", models.FloatField(blank=True, null=True)),
                ("piilates", models.FloatField(blank=True, null=True)),
                ("gym", models.FloatField(blank=True, null=True)),
                ("atm_info", models.TextField(blank=True, null=True)),
                ("pc_room_info", models.TextField(blank=True, null=True)),
                ("police_office_info", models.TextField(blank=True, null=True)),
                ("gonggogng_gym_info", models.TextField(blank=True, null=True)),
                ("perform_place_info", models.TextField(blank=True, null=True)),
                ("park_info", models.TextField(blank=True, null=True)),
                ("church_info", models.TextField(blank=True, null=True)),
                ("big_mart_info", models.TextField(blank=True, null=True)),
                ("liberary_info", models.TextField(blank=True, null=True)),
                ("animal_hospital_info", models.TextField(blank=True, null=True)),
                ("art_info", models.TextField(blank=True, null=True)),
                ("banchan_info", models.TextField(blank=True, null=True)),
                ("bus_stop_info", models.TextField(blank=True, null=True)),
                ("hospital_info", models.TextField(blank=True, null=True)),
                ("beauty_care_info", models.TextField(blank=True, null=True)),
                ("daiso_info", models.TextField(blank=True, null=True)),
                ("chatolic_info", models.TextField(blank=True, null=True)),
                ("shopping_center_info", models.TextField(blank=True, null=True)),
                ("bar_info", models.TextField(blank=True, null=True)),
                ("super_market_info", models.TextField(blank=True, null=True)),
                ("pharmacy_info", models.TextField(blank=True, null=True)),
                ("theater_info", models.TextField(blank=True, null=True)),
                ("yoga_info", models.TextField(blank=True, null=True)),
                ("post_office_info", models.TextField(blank=True, null=True)),
                ("bank_info", models.TextField(blank=True, null=True)),
                ("food_store_info", models.TextField(blank=True, null=True)),
                ("bike_info", models.TextField(blank=True, null=True)),
                ("temple_info", models.TextField(blank=True, null=True)),
                ("citizen_center_info", models.TextField(blank=True, null=True)),
                ("subway_info", models.TextField(blank=True, null=True)),
                ("cafe_info", models.TextField(blank=True, null=True)),
                ("coin_karaoke_info", models.TextField(blank=True, null=True)),
                ("coin_wash_room_info", models.TextField(blank=True, null=True)),
                ("cross_fit_info", models.TextField(blank=True, null=True)),
                ("convience_store_info", models.TextField(blank=True, null=True)),
                ("piilates_info", models.TextField(blank=True, null=True)),
                ("gym_info", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "plz_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PyboAnswer",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
            ],
            options={
                "db_table": "pybo_answer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PyboQuestion",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
            ],
            options={
                "db_table": "pybo_question",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TitlePost",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=30)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "title_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkingBackAnswer",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
            ],
            options={
                "db_table": "working_back_answer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkingBackQuestion",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField()),
            ],
            options={
                "db_table": "working_back_question",
                "managed": False,
            },
        ),
    ]
